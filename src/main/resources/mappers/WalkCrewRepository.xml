<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.RSW.repository.WalkCrewRepository">

	<!-- 크루 등록 (SET 방식) -->
	<insert id="insert">
		INSERT INTO walk_crew
		SET title = #{title},
		description = #{description},
		district_id = #{districtId},
		leaderId =
		#{leaderId},
		createdAt = NOW()
	</insert>


	<!-- 크루 단건 조회 -->
	<select id="findById" resultType="com.example.RSW.vo.WalkCrew">
		SELECT
		id,
		title,
		description,
		district_id AS districtId,
		leaderId,
		createdAt
		FROM walk_crew
		WHERE id =
		#{id}
	</select>


	<!-- 지역별 크루 리스트 -->
	<select id="findByArea" resultType="com.example.RSW.vo.WalkCrew">
		SELECT * FROM walk_crew WHERE
		area = #{area}
	</select>

	<!-- 전체 크루 리스트 -->
	<select id="findAll" resultType="com.example.RSW.vo.WalkCrew">
		SELECT
		wc.id,
		wc.title,
		wc.description,
		wc.district_id AS districtId,
		wc.leaderId,
		wc.createdAt,
		m.nickname,
		d.city,
		d.district,
		d.dong
		FROM walk_crew wc
		LEFT JOIN member m
		ON wc.leaderId = m.id
		LEFT JOIN district d ON wc.district_id = d.id
		ORDER BY wc.createdAt DESC
	</select>


	<!-- 크루 수정 -->
	<update id="update">
		UPDATE walk_crew
		SET title = #{title},
		description =
		#{description},
		area = #{area},
		leaderId = #{leaderId}
		WHERE id = #{id}
	</update>

	<!-- 크루 삭제 -->
	<delete id="deleteById">
		DELETE FROM walk_crew WHERE id = #{id}
	</delete>

	<insert id="insertMemberToCrew">
		INSERT INTO walk_crew_member
		SET memberId =
		#{memberId},
		crewId = #{crewId},
		joinedAt = NOW()
	</insert>

	<select id="getAllCrews"
		resultType="com.example.RSW.vo.WalkCrew">
		SELECT
		wc.id,
		wc.title,
		wc.description,
		wc.district_id AS
		districtId,
		wc.leaderId,
		wc.createdAt,
		m.nickname,
		d.city,
		d.district,
		d.dong
		FROM walk_crew wc
		INNER JOIN member m ON wc.leaderId = m.id
		INNER
		JOIN
		district d ON wc.district_id = d.id
		ORDER BY wc.createdAt DESC
	</select>


	<select id="getWalkCrews"
		resultType="com.example.RSW.vo.WalkCrew">
		SELECT * FROM walk_crew WHERE id = #{memberId}
	</select>

	<!-- ✅ 특정 멤버가 해당 크루에 이미 참가했는지 확인 -->
	<select id="countByCrewIdAndMemberId" resultType="int">
		SELECT COUNT(*)
		FROM walk_crew_member
		WHERE crewId = #{crewId} AND memberId =
		#{memberId}
	</select>

	<!-- ✅ 크루에 멤버 등록 -->
	<insert id="insertCrewMember">
		INSERT INTO walk_crew_member (crewId, memberId,
		joinedAt)
		VALUES (#{crewId}, #{memberId}, NOW())
	</insert>

	<select id="getApplicantsByCrewId" resultType="map">
		SELECT
		m.id AS
		memberId,
		m.name AS memberName,
		wcm.joinedAt AS joinedAt
		FROM
		walk_crew_member wcm
		INNER JOIN member m ON wcm.memberId = m.id
		WHERE
		wcm.crewId = #{crewId}
	</select>



	<select id="getApplicantDetail" resultType="map">
		SELECT
		m.id AS
		memberId,
		m.name AS memberName,
		m.nickname AS memberNickname,
		m.address
		AS memberAddress,
		m.authLevel,
		wcm.joinedAt
		FROM walk_crew_member wcm
		INNER JOIN member m ON wcm.memberId = m.id
		WHERE wcm.crewId = #{crewId}
		AND wcm.memberId = #{memberId}
	</select>

	<select id="isApprovedMember" resultType="int">
		SELECT COUNT(*) FROM
		walk_crew_member
		WHERE crewId = #{crewId}
		AND memberId = #{memberId}
		AND
		status = 'approved'
	</select>

	<update id="updateMemberStatusToApproved">
		UPDATE walk_crew_member
		SET status = 'approved'
		WHERE
		crewId = #{crewId} AND memberId = #{memberId}
	</update>

	<select id="findByLeaderId"
		resultType="com.example.RSW.vo.WalkCrew">
		SELECT *
		FROM walk_crew
		WHERE leaderId = #{leaderId}
		ORDER BY createdAt DESC
		LIMIT 1
	</select>
</mapper>
