<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.RSW.repository.ArticleRepository">

	<insert id="writeArticle" parameterType="map">
		INSERT INTO article
		SET
		regDate = NOW(),
		updateDate = NOW(),
		memberId = #{memberId},
		boardId =
		#{boardId},
		title =
		#{title},
		`body` = #{body},
		imageUrl = #{imageUrl}
	</insert>

	<delete id="deleteArticle" parameterType="int">
		DELETE FROM article
		WHERE id = #{id}
	</delete>

	<update id="modifyArticle" parameterType="map">
		UPDATE article
		<set>
			<if test="title != null and title != ''">title = #{title},</if>
			<if test="body != null and body != ''">`body` = #{body},</if>
			updateDate = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<update id="increaseHitCount" parameterType="int">
		UPDATE article
		SET
		hitCount = hitCount + 1
		WHERE id = #{id}
	</update>

	<update id="increaseGoodReactionPoint" parameterType="int">
		UPDATE
		article
		SET
		goodReactionPoint = goodReactionPoint + 1
		WHERE id = #{relId}
	</update>

	<update id="decreaseGoodReactionPoint" parameterType="int">
		UPDATE
		article
		SET goodReactionPoint = goodReactionPoint - 1
		WHERE id =
		#{relId}
	</update>

	<update id="increaseBadReactionPoint" parameterType="int">
		UPDATE
		article
		SET badReactionPoint = badReactionPoint + 1
		WHERE id = #{relId}
	</update>

	<update id="decreaseBadReactionPoint" parameterType="int">
		UPDATE
		article
		SET badReactionPoint = badReactionPoint - 1
		WHERE id = #{relId}
	</update>

	<select id="getArticleHitCount" parameterType="int">
		SELECT hitCount
		FROM article
		WHERE id = #{id}
	</select>

	<select id="getArticleCount" parameterType="int">
		SELECT COUNT(*) , M.nickname AS extra__writer
		FROM article AS A
		INNER
		JOIN `member` AS M
		ON A.memberId = M.id
		WHERE 1
		<if test="boardId != 0">
			AND A.boardId = #{boardId}
		</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'nickname'">
					AND M.nickname LIKE CONCAT('%', #{searchKeyword},
					'%')
				</when>
				<otherwise>
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="getLastInsertId" parameterType="int">
		SELECT
		LAST_INSERT_ID()
	</select>


	<select id="getForPrintArticle" parameterType="int"
		resultType="com.example.RSW.vo.Article">
		SELECT A.*, M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		WHERE A.id = #{id}
	</select>

	<select id="getArticleById" parameterType="int"
		resultType="com.example.RSW.vo.Article">
		SELECT *
		FROM article
		WHERE id =#{id}
	</select>

	<select id="getForPrintArticles"
		resultType="com.example.RSW.vo.Article">
		SELECT A.*, M.nickname AS extra__writer, IFNULL(COUNT(R.id),0) AS
		extra__repliesCount
		FROM article AS A
		INNER JOIN
		`member` AS M
		ON
		A.memberId = M.id
		LEFT JOIN `reply` AS R
		ON A.id = R.relId
		WHERE 1
		<if test="boardId != 0">
			AND boardId = #{boardId}
		</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'nickname'">
					AND M.nickname LIKE CONCAT('%', #{searchKeyword},
					'%')
				</when>
				<otherwise>
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</otherwise>
			</choose>
		</if>
		GROUP BY A.id
		ORDER BY A.id
		DESC
		<if test="limitFrom >= 0">
			LIMIT #{limitFrom}, #{limitTake}
		</if>
	</select>

	<select id="getArticles" resultType="com.example.RSW.vo.Article">
		SELECT A.*, M.nickname AS
		extra__writer
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId =
		M.id
		ORDER BY A.id
		DESC
	</select>

	<select id="getGoodRP">SELECT goodReactionPoint
		FROM article
		WHERE id =
		#{relId}
	</select>
	<select id="getBadRP">SELECT badReactionPoint
		FROM article
		WHERE id =
		#{relId}
	</select>

	<select id="findAll" resultType="Article">
		SELECT A.*,
		M.nickname AS
		extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON A.memberId =
		M.id
		ORDER BY A.id DESC
	</select>

	<!-- ✅ 크루 게시글 작성 (INSERT) - boardId: 게시판 ID (타입 구분용) - crewId: 작성된 크루 ID 
		- memberId: 작성자 ID - title, body: 글 제목과 본문 - regDate, updateDate: 현재 시각으로 
		자동 입력 -->
	<insert id="insertCrewArticle">
		INSERT INTO article
		SET boardId = #{boardId},
		crewId =
		#{crewId},
		memberId = #{memberId},
		title = #{title},
		`body` = #{body},
		imageUrl = #{imageUrl},
		regDate = NOW(),
		updateDate = NOW()
	</insert>


	<!-- ✅ 특정 크루의 게시글 목록 조회 (삭제되지 않은 글만) - crewId: 크루 ID - delStatus = 0: 삭제되지 
		않은 글만 - 최신순 정렬 (regDate DESC) -->

	<select id="findByCrewId"
		resultType="com.example.RSW.vo.Article">
		SELECT *
		FROM article
		WHERE crewId = #{crewId}
		AND delStatus =
		0
		ORDER BY regDate DESC
	</select>

	<!-- ✅ 크루 카페 홈에서 게시판별 최근 글 목록을 불러오는 쿼리 - crewId: 해당 크루의 ID - boardId: 게시판 
		ID (예: 공지사항, 자유게시판 등) - delStatus = 0: 삭제되지 않은 글만 조회 - 최신 글 5개만 제한 (LIMIT 
		#{limit}) -->
	<!-- @formatter:off -->
	<select id="getRecentArticlesByCrewAndBoardId"
		resultType="com.example.RSW.vo.Article">
		SELECT *
		FROM article
		WHERE crewId = #{crewId}
		AND boardId =
		#{boardId}
		AND delStatus = 0
		ORDER BY id DESC
		LIMIT #{limit}
	</select>
	<!-- @formatter:on -->

	<!-- ✅ 특정 크루 ID와 게시판 ID에 해당하는 게시글 목록 조회 -->
	<select id="getArticlesByCrewIdAndBoardId" resultType="Article">
		SELECT *
		FROM article
		WHERE crewId = #{crewId}
		AND boardId = #{boardId}
		AND
		delStatus = 0
		ORDER BY id DESC
	</select>

	<!-- ✅ 일반 공지사항 전용 쿼리 (crewId가 NULL인 게시글만) -->
	<select id="getNoticeArticlesByBoardId" resultType="Article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M ON
		A.memberId = M.id
		WHERE A.boardId = #{boardId}
		AND A.delStatus = 0
		AND
		A.crewId IS NULL
		ORDER BY A.id DESC
		LIMIT #{limit}
	</select>

	<!-- 일정을 등록하기 -->
	<insert id="writeSchedule">
		INSERT INTO article
		SET
		boardId = 5,
		crewId = #{crewId},
		memberId = #{loginedMemberId},
		title = #{scheduleTitle},
		body = '',
		regDate = NOW(),
		updateDate = NOW(),
		scheduleDate = #{scheduleDate}
	</insert>


	<!-- ✅ 관리자 전용 공지사항 게시글 개수 조회 -->
	<!-- boardId = 1인 전체 공지사항 게시판에서 authLevel = 7(관리자)이 작성한 게시글만 카운트 -->

	<!-- ✅ 관리자 공지 개수 -->
	<select id="getAdminOnlyArticleCount" resultType="int">
		SELECT COUNT(*)
		FROM article
		WHERE boardId = #{boardId}
		AND delStatus = 0
		AND memberId IN (
		SELECT id FROM member WHERE authLevel = 7
		)
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND body LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
			</choose>
		</if>
	</select>

	<!-- ✅ 관리자 공지 목록 -->
	<select id="getAdminOnlyArticles" resultType="Article">
		SELECT *
		FROM article
		WHERE boardId = #{boardId}
		AND delStatus = 0
		AND
		memberId IN (
		SELECT id FROM member WHERE authLevel = 7
		)
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchKeywordTypeCode == 'title'">
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchKeywordTypeCode == 'body'">
					AND body LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
			</choose>
		</if>
		ORDER BY id DESC
		LIMIT #{limitStart}, #{itemsInAPage}
	</select>



</mapper>